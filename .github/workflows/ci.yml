name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        ocaml-compiler:
          - 5.4.0

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use dune
        uses: ocaml-dune/setup-dune@v1

      - name: Restore dune cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.cache/dune
          key: dune-${{ matrix.os }}-${{ hashFiles('dune.lock/*.pkg') }}
          restore-keys: |
            dune-${{ matrix.os }}-

      - name: Lock dependencies with dune pkg
        run: dune pkg lock

      - name: Build with dune pkg
        run: dune build

      - name: Run tests
        run: dune runtest

      - name: Check code formatting
        run: dune build @fmt

      - name: Save dune cache
        if: always()
        uses: actions/cache/save@v4
        with:
          path: ~/.cache/dune
          key: dune-${{ matrix.os }}-${{ hashFiles('dune.lock/*.pkg') }}
